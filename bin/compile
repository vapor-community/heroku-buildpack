#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Ignore the unused variable ShellCheck warning, since we are sourcing files which will use them.
# shellcheck disable=SC2034

set -e
set -o pipefail

BIN_DIR=$(
  cd $(dirname $0)
  pwd
)
ROOT_DIR=$(dirname "$BIN_DIR")

APP_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

VAR_PATH="$ENV_DIR/PACKAGE_DIR"

if [[ -f "$VAR_PATH" ]]; then
  package=$(cat "$VAR_PATH")
  BUILD_DIR="$APP_DIR/$package"
  echo "Using package directory at $package"
else
  BUILD_DIR="$APP_DIR"
  echo "No PACKAGE_DIR config variable is set. Using the repo root."
fi

SWIFT_VERSION="6.0.2"
SWIFT_BUILD_CONFIGURATION="release"
SWIFT_BUILD_FLAGS=""

source "/etc/lsb-release"
source "$BIN_DIR/utils"

if [ -f "$BUILD_DIR/.swift-version" ]; then
  SWIFT_VERSION=$(cat "$BUILD_DIR/.swift-version" | tr -d '[[:space:]]')
  puts-step "Using Swift $SWIFT_VERSION (from package .swift-version file)"
elif [ -f "$APP_DIR/.swift-version" ]; then
  SWIFT_VERSION=$(cat "$APP_DIR/.swift-version" | tr -d '[[:space:]]')
  puts-step "Using Swift $SWIFT_VERSION (from top-level .swift-version file)"
elif [ -f "$ENV_DIR/SWIFT_VERSION" ]; then
  SWIFT_VERSION=$(cat "$ENV_DIR/SWIFT_VERSION" | tr -d '[[:space:]]')
  puts-step "Using Swift $SWIFT_VERSION (from SWIFT_VERSION config)"
else
  puts-step "Using Swift $SWIFT_VERSION (default)"
fi

if [ -f "$ENV_DIR/SWIFT_BUILD_CONFIGURATION" ]; then
  SWIFT_BUILD_CONFIGURATION=$(cat "$ENV_DIR/SWIFT_BUILD_CONFIGURATION")
fi

if [ -f "$ENV_DIR/SWIFT_BUILD_FLAGS" ]; then
  SWIFT_BUILD_FLAGS=$(cat "$ENV_DIR/SWIFT_BUILD_FLAGS")
fi

if [ -f "$ENV_DIR/SWIFT_DYNAMIC_STDLIB" ]; then
  SWIFT_DYNAMIC_STDLIB=$(cat "$ENV_DIR/SWIFT_DYNAMIC_STDLIB" | tr -d '[[:space:]]')
  SWIFT_BACKTRACE_EXECUTABLE="swift-backtrace"
else
  SWIFT_BACKTRACE_EXECUTABLE="swift-backtrace-static"
fi

mkdir -p "$CACHE_DIR/$STACK"
source "$BIN_DIR/steps/swiftenv"

cd "$BUILD_DIR"
source "$BIN_DIR/steps/hooks/pre_compile" "$BUILD_DIR" "$CACHE_DIR" "$ENV_DIR"
source "$BIN_DIR/steps/ssh"
source "$BIN_DIR/steps/swift-build"
source "$BIN_DIR/steps/hooks/post_compile" "$BUILD_DIR" "$CACHE_DIR" "$ENV_DIR"
if [[ -z "$RUN_TESTS" ]]; then
  source "$BIN_DIR/steps/hooks/pre_install" "$BUILD_DIR" "$CACHE_DIR" "$ENV_DIR"
  source "$BIN_DIR/steps/swift-install"
  source "$BIN_DIR/steps/hooks/post_install" "$BUILD_DIR" "$CACHE_DIR" "$ENV_DIR"
fi

# Setup application environment
set-env() {
  PROFILE_PATH="$APP_DIR/.profile.d/swift.sh"
  echo "export $1=$2" >>$PROFILE_PATH
}

mkdir -p "$APP_DIR/.profile.d"

set-env PATH '$HOME/$APP_DIR/.swift-bin:$PATH'
set-env LD_LIBRARY_PATH "$LD_LIBRARY_PATH:$HOME/.swift-lib:$APP_DIR/.swift-lib"
set-env SWIFT_BACKTRACE "enable=yes,sanitize=yes,threads=all,images=all,interactive=no,output-to=stderr,symbolicate=fast,swift-backtrace=.swift-bin/$SWIFT_BACKTRACE_EXECUTABLE"
